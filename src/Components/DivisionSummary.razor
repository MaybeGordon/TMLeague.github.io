@using TMLeague.Services
@using TMLeague.ViewModels
@inject DivisionService DivisionService
@inject GameService GameService

<h5>@(Division?.DivisionName ?? "Division")</h5>

@if (Division == null)
{
    <Loading></Loading>
}
else
{
    <div class="progress" tabindex="0" data-toggle="tooltip" title="Test tooltip content">
        <div class="progress-bar progress-bar-striped progress-bar-animated bg-warning"
         role="progressbar" aria-label="Animated striped example" aria-valuenow="@((ushort)Division.Progress)"
         aria-valuemin="0" aria-valuemax="100" style="@($"width: {(ushort)Division.Progress}%")"></div>
    </div>
}

<button class="btn btn-secondary" data-toggle="tooltip" title="Test tooltip content">Tooltip</button>

@code {
    [Parameter]
    public string? LeagueId { get; set; }

    [Parameter]
    public string? SeasonId { get; set; }

    [Parameter]
    public string? DivisionId { get; set; }

    private DivisionSummaryViewModel? Division { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (LeagueId == null || SeasonId == null || DivisionId == null)
            return;

        Division = await DivisionService.GetDivisionSummaryVm(LeagueId, SeasonId, DivisionId);
    }
}