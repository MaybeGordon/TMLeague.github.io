@using TMLeague.Components
@using TMApplication.Services
@using TMApplication.ViewModels
@inject SeasonService SeasonService
@inject ILogger<SeasonSummary> Logger

<h4>@(SeasonSummaryDetails?.SeasonName ?? "Season") summary</h4>

<div class="container">
    <div class="row">
        @if (SeasonSummaryDetails == null)
        {
            @if (_isInitialized)
            {
                <div class="lead">The league has no seasons.</div>
            }
            else
            {
                <Loading></Loading>
            }
        }
        else
        {
            @foreach (var division in SeasonSummaryDetails.DivisionIds)
            {
                <div class="col-sm-4 bg-dark-container-2">
                    <DivisionSummary LeagueId="@LeagueId" SeasonId="@SeasonId" DivisionId="@division"></DivisionSummary>
                </div>
            }
        }
    </div>
</div>

@code {
    [Parameter]
    public string? LeagueId { get; set; }

    [Parameter]
    public string? SeasonId { get; set; }

    private SeasonSummaryViewModel? SeasonSummaryDetails { get; set; }

    private bool _isInitialized;

    protected override async Task OnInitializedAsync()
    {
        if (LeagueId != null && SeasonId != null)
            SeasonSummaryDetails = await SeasonService.GetSeasonSummaryVm(LeagueId, SeasonId);
        else
            Logger.LogError($"Parameters {nameof(LeagueId)} and {nameof(SeasonId)} are required!");

        _isInitialized = true;
    }
}