@page "/league/{leagueId}/season/{seasonId}/{divisionId}"
@using TMApplication.ViewModels
@using TMApplication.Services
@using TMModels
@inject DivisionService DivisionService

<h3>@(DivisionVm?.LeagueName ?? $"League {LeagueId}")</h3>
<h4>@(DivisionVm?.SeasonName ?? $"Season {SeasonId}")</h4>
<h5>@(DivisionVm?.DivisionName ?? $"Division {DivisionId}")</h5>

<div class="container">
    <div class="row">
        @if (DivisionVm == null)
        {
            @if (_isInitialized)
            {
                <div class="lead">That division not exists.</div>
            }
            else
            {
                <Loading></Loading>
            }
        }
        else
        {
            <div class="col-11 overflow-auto">
                <table class="table table-striped table-dark">
                    <thead>
                        <tr>
                            <th scope="col">Player</th>
                            <th scope="col">Points</th>
                            <th scope="col">Win</th>
                            <th scope="col">Penalties</th>
                            <th scope="col">Cla</th>
                            <th scope="col">Supply</th>
                            <th scope="col" class="invisible border-0 collapse @(ShowHouses ? "show" : "")"></th>
                            <th scope="col" class="collapse @(ShowHouses ? "show" : "")">Baratheon</th>
                            <th scope="col" class="collapse @(ShowHouses ? "show" : "")">Lannister</th>
                            <th scope="col" class="collapse @(ShowHouses ? "show" : "")">Stark</th>
                            <th scope="col" class="collapse @(ShowHouses ? "show" : "")">Tyrell</th>
                            <th scope="col" class="collapse @(ShowHouses ? "show" : "")">Greyjoy</th>
                            <th scope="col" class="collapse @(ShowHouses ? "show" : "")">Martell</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var playerVm in DivisionVm.Players)
                        {
                            <tr>
                                <th scope="row">@playerVm.Name</th>
                                <td class="text-warning">@playerVm.TotalPoints</td>
                                <td>@playerVm.Wins</td>
                                <td>@playerVm.TotalPenaltyPoints</td>
                                <td>@playerVm.Cla</td>
                                <td>@playerVm.Supplies</td>
                                <td class="invisible border-0 collapse @(ShowHouses ? "show" : "")"></td>
                                <td class="collapse @(ShowHouses ? "show" : "")">@playerVm.GetHouse(House.Baratheon).Points</td>
                                <td class="collapse @(ShowHouses ? "show" : "")">@playerVm.GetHouse(House.Lannister).Points</td>
                                <td class="collapse @(ShowHouses ? "show" : "")">@playerVm.GetHouse(House.Stark).Points</td>
                                <td class="collapse @(ShowHouses ? "show" : "")">@playerVm.GetHouse(House.Tyrell).Points</td>
                                <td class="collapse @(ShowHouses ? "show" : "")">@playerVm.GetHouse(House.Greyjoy).Points</td>
                                <td class="collapse @(ShowHouses ? "show" : "")">@playerVm.GetHouse(House.Martell).Points</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="col-1 p-0">
                <button class="btn btn-primary h-100 w-100 p-0" style="max-width: 50px" @onclick="ChangeVisibility">
                    @if (ShowHouses)
                    {
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="40" fill="currentColor" class="bi bi-chevron-compact-left" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M9.224 1.553a.5.5 0 0 1 .223.67L6.56 8l2.888 5.776a.5.5 0 1 1-.894.448l-3-6a.5.5 0 0 1 0-.448l3-6a.5.5 0 0 1 .67-.223z" />
                        </svg>
                    }
                    else
                    {
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="40" fill="currentColor" class="bi bi-chevron-compact-right" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M6.776 1.553a.5.5 0 0 1 .671.223l3 6a.5.5 0 0 1 0 .448l-3 6a.5.5 0 1 1-.894-.448L9.44 8 6.553 2.224a.5.5 0 0 1 .223-.671z" />
                        </svg>
                    }
                </button>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public string? LeagueId { get; set; }
    [Parameter]
    public string? SeasonId { get; set; }
    [Parameter]
    public string? DivisionId { get; set; }

    private DivisionViewModel? DivisionVm { get; set; }

    private bool ShowHouses { get; set; } = false;

    private void ChangeVisibility() => ShowHouses = !ShowHouses;

    private bool _isInitialized;

    protected override async Task OnInitializedAsync()
    {
        if (LeagueId == null || SeasonId == null || DivisionId == null)
            return;

        DivisionVm = await DivisionService.GetDivisionVm(LeagueId, SeasonId, DivisionId);

        _isInitialized = true;
    }
}