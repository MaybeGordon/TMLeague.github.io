@page "/league/{leagueId}/summary"
@using TMApplication.Services
@using TMApplication.ViewModels
@inject SummaryService SummaryService
@inject ILogger<Summary> Logger
<h3>League @LeagueId</h3>
<h4>Summary</h4>

@if (SummaryVm == null)
{
    @if (_isInitialized)
    {
        <div class="lead">The league has no finished seasons.</div>
    }
    else
    {
        <Loading></Loading>
    }
}
else
{
    @foreach (var division in SummaryVm.Divisions)
    {
        <div class="container p-2 bg-dark-container">
            <h5>@division.DivisionName</h5>
            <table class="table table-striped table-dark pb-0" width="1500px">
                <thead>
                    <tr>
                        <th scope="col" style="width: 200px">Player</th>
                        <th scope="col" style="width: 100px">Points</th>
                        <th scope="col" style="width: 100px">Wins</th>
                        <th scope="col" style="width: 100px">Penalties</th>
                        <th scope="col" style="width: 100px">Cla</th>
                        <th scope="col" style="width: 100px">Supply</th>
                        <th scope="col" style="width: 100px">Baratheon</th>
                        <th scope="col" style="width: 100px">Lannister</th>
                        <th scope="col" style="width: 100px">Stark</th>
                        <th scope="col" style="width: 100px">Tyrell</th>
                        <th scope="col" style="width: 100px">Greyjoy</th>
                        <th scope="col" style="width: 100px">Martell</th>
                        <th scope="col" style="width: 100px">Position</th>
                        <th scope="col" style="width: 100px">All seasons</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var player in division.Players)
                    {
                        <tr>
                            <th scope="row">@player.Player</th>
                            <td class="text-warning">@player.TotalPoints(ScoreType)</td>
                            <td>@player.Wins(ScoreType)</td>
                            <td>@player.PenaltiesPoints(ScoreType)</td>
                            <td>@player.Cla(ScoreType)</td>
                            <td>@player.Supplies(ScoreType)</td>
                            <td>@player.Baratheon(ScoreType)</td>
                            <td>@player.Lannister(ScoreType)</td>
                            <td>@player.Stark(ScoreType)</td>
                            <td>@player.Tyrell(ScoreType)</td>
                            <td>@player.Greyjoy(ScoreType)</td>
                            <td>@player.Martell(ScoreType)</td>
                            <td>0</td>
                            <td>@player.Seasons</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
}

@code {
    [Parameter]
    public string? LeagueId { get; set; }

    private ScoreType ScoreType { get; set; }

    private SummaryViewModel? SummaryVm { get; set; }

    private bool _isInitialized;

    protected override async Task OnInitializedAsync()
    {
        if (LeagueId != null)
            SummaryVm = await SummaryService.GetSummaryVm(LeagueId);
        else
            Logger.LogError($"Parameter {nameof(LeagueId)} is required!");

        _isInitialized = true;
    }
}