@using System.Text.RegularExpressions
@implements IDisposable
@inject NavigationManager NavManager

<nav class="navbar navbar-expand-md navbar-dark mb-4">
    <div class="container-fluid">
        <NavLink class="navbar-brand" href="/" Match="NavLinkMatch.All">
            Home
        </NavLink>
        @if (LeagueId != null)
        {
            <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor"
             class="bi bi-chevron-compact-right" viewBox="0 0 16 16">
                <path fill-rule="evenodd"
                  d="M6.776 1.553a.5.5 0 0 1 .671.223l3 6a.5.5 0 0 1 0 .448l-3 6a.5.5 0 1 1-.894-.448L9.44 8 6.553 2.224a.5.5 0 0 1 .223-.671z" />
            </svg>
            <NavLink class="navbar-brand" href=@($"/league/{LeagueId}/index") Match="NavLinkMatch.All">
                League
            </NavLink>
            <button class="navbar-toggler @NavButtonCssClass" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse"
                aria-controls="navbarCollapse" aria-label="Toggle navigation" @onclick="ToggleNavMenu">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse @NavBarCssClass" id="navbarCollapse" @onclick="ToggleNavMenu">
                <ul class="navbar-nav me-auto mb-2 mb-md-0">
                    <li class="nav-item">
                        <NavLink class="nav-link" href=@($"/league/{LeagueId}/summary") Match="NavLinkMatch.All">Summary</NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href=@($"/league/{LeagueId}/players")>Players</NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href=@($"/league/{LeagueId}/seasons")>Seasons</NavLink>
                    </li>
                </ul>
            </div>
        }
    </div>
</nav>

@code {
    private string? LeagueId { get; set; }

    private bool _collapseNavMenu = true;

    private string? NavBarCssClass => _collapseNavMenu ? null : "show";
    private string? NavButtonCssClass => _collapseNavMenu ? "collapsed" : null;

    protected override void OnInitialized()
    {
        SetLeagueId(NavManager.Uri);
        NavManager.LocationChanged += LocationChanged;
    }

    private void LocationChanged(object? sender, LocationChangedEventArgs e) => SetLeagueId(e.Location);

    private void SetLeagueId(string location)
    {
        var match = Regex.Match(location, "league/(.*)/", RegexOptions.IgnoreCase);
        LeagueId = match.Success ? match.Groups[1].Value : null;
        StateHasChanged();
    }

    private void ToggleNavMenu()
    {
        _collapseNavMenu = !_collapseNavMenu;
    }

    public void Dispose()
    {
        NavManager.LocationChanged -= LocationChanged;
    }
}
